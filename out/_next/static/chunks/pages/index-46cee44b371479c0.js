(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return s(4135)}])},4135:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return g}});var a=s(5893),r=s(7294);let n=["World History","Science","Pop Culture","Literature","Sports","Geography"],o=[200,400,600,800,1e3],l=e=>({text:"This clue worth $"+e+" needs to be filled in",answer:"What is the answer?",value:e,revealed:!1,answered:!1,dailyDouble:!1,ruleViolation:null}),i=()=>n.map(e=>({title:e,questions:o.map(l)})),c=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,t=[];for(let s=1;s<=e;s++)t.push({name:"Player ".concat(s),score:0,active:1===s});return t};function d(){let[e,t]=(0,r.useState)(3),[s,d]=(0,r.useState)({categories:i(),players:c(e),currentPlayer:0,finalJeopardyActive:!1}),[u,h]=(0,r.useState)(null),[g,p]=(0,r.useState)(!1),[m,y]=(0,r.useState)("openai"),[x,v]=(0,r.useState)(""),[f,j]=(0,r.useState)('You are a Jeopardy! game creator tasked with generating well-structured, diverse Jeopardy! boards that follow the conventions and expectations of the game show. Your goal is to create categories, clues, and correct question-answer pairs that align with Jeopardy! standards. \n\nThe key principles are as follows:\n* Clarity & Precision: Ensure that all clues and question-answer pairs are clear, precise, and avoid ambiguity. There should be no room for misinterpretation of the clue\'s intent.\n* Variety & Creativity: Strive for a high level of variance in categories and clues. Avoid predictable, overused references, and ensure diversity across subject areas, from literature to science, pop culture, history, and beyond.\n* No Repetition: Each clue-question pair should be unique within the board. No duplication of answers or subjects should occur across categories.\n* Ground Truth Only: All clues must reflect accurate, verifiable information. Double-check facts to ensure correctness, and do not leave any opportunity for controversial interpretations of the clues.\n* Jeopardy! Rhetoric: Maintain the distinct Jeopardy! style in phrasing. Clues should be framed as statements, with the contestants providing the correct response in the form of a question.\n* Progressive Difficulty: The difficulty of questions should gradually increase corresponding to their dollar values. $200 questions should be easier, while $1000 questions should be more challenging, with a smooth gradient of difficulty for $400, $600, and $800 questions.\n* Avoid Redundancy in Themes: While categories may overlap in general topics (e.g., animals or countries), ensure the content within those categories does not repeat.\n* Maintain Clue Integrity: Do not reveal the answer to the clue in its explicit language. Category titles should NOT contain the answer or give away the solution to any clue.\n* STRICT WORD EXCLUSION RULE: The correct response/answer MUST NOT contain any words that appear in the clue or category. For example, if the clue mentions "Greenwich Village" then "Greenwich Village" cannot be part of the correct response. Ensure each answer refers to a specific, historically accurate entity or concept related to but not mentioned in the clue. Bad example: Category "Neighborhoods" with clue "This Greenwich Village area was the epicenter of the Stonewall Riots" and answer "What is Greenwich Village?" - this is incorrect because the answer repeats words from the clue. Good example: Category "LGBTQ+ History" with clue "This 1969 uprising in Greenwich Village marked a turning point in the fight for gay rights" and answer "What are the Stonewall Riots?" - this is correct because the answer doesn\'t repeat words from the clue.'),[b,w]=(0,r.useState)(""),[N,S]=(0,r.useState)(!1),[C,k]=(0,r.useState)(!1),[P,q]=(0,r.useState)("standard"),[T,I]=(0,r.useState)({}),[D,A]=(0,r.useState)(null),[O,E]=(0,r.useState)(!1),[J,R]=(0,r.useState)([]),[_,$]=(0,r.useState)(!1),[M,F]=(0,r.useState)(!1),[G,L]=(0,r.useState)(""),[B,W]=(0,r.useState)(!1),[V,U]=(0,r.useState)(null),[X,Y]=(0,r.useState)(null),[z,H]=(0,r.useState)(!1),[Q,K]=(0,r.useState)([]),[Z,ee]=(0,r.useState)(e);(0,r.useEffect)(()=>{try{let e=localStorage.getItem("jeopardy_api_key");e&&v(e);let t=localStorage.getItem("jeopardy_ai_provider");t&&y(t);let s=localStorage.getItem("jeopardy_system_message");s&&j(s);let a=localStorage.getItem("jeopardy_saved_boards");if(a)try{let e=JSON.parse(a);R(e)}catch(e){}let r=localStorage.getItem("jeopardy_theme");r&&q(r)}catch(e){}},[]),(0,r.useEffect)(()=>{localStorage.setItem("jeopardy_theme",P)},[P]),(0,r.useEffect)(()=>{J.length>0&&localStorage.setItem("jeopardy_saved_boards",JSON.stringify(J))},[J]);let et=(e,t)=>{let a=s.categories[e].questions[t];if(a.answered)return;h({categoryIndex:e,questionIndex:t}),p(!1),I({});let r=[...s.categories];r[e].questions[t].revealed=!0,d({...s,categories:r}),setTimeout(()=>{window.scrollTo(0,0),document.body.style.overflow="hidden"},100),a.dailyDouble?(A(null),E(!0)):E(!1)},es=e=>{if(!u)return;let{categoryIndex:t,questionIndex:a}=u;s.categories[t].questions[a];let r=s.players[s.currentPlayer].score,n=Math.max(r,1e3),o=e;e<100&&(o=100),e>n&&(o=n),A(o=100*Math.round(o/100)),E(!1)},ea=e=>{I(t=>({...t,[e]:!t[e]}))},er=(e,t)=>{let a;if(!u)return;let{categoryIndex:r,questionIndex:n}=u,o=s.categories[r].questions[n].value;s.categories[r].questions[n].dailyDouble&&null!==D&&(o=D);let l=[...s.players],i=void 0!==t?t:s.currentPlayer;l[i].score+=e?o:-o;let c=[...s.categories];c[r].questions[n].answered=!0,a=e&&void 0!==t?t:(s.currentPlayer+1)%s.players.length,d({...s,categories:c,players:l,currentPlayer:a}),document.body.style.overflow="",h(null),p(!1),A(null),E(!1)},en=e=>{B&&U({index:e,title:s.categories[e].title})},eo=(e,t)=>{if(!B)return;let a=s.categories[e].questions[t];Y({categoryIndex:e,questionIndex:t,text:a.text,answer:a.answer,value:a.value,dailyDouble:a.dailyDouble})},el=(e,t,s)=>{let a=e=>e.toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()?]/g,""),r=a(e),n=a(t),o=a(s),l=r.split(/\s+/).filter(e=>e.length>2),i=n.split(/\s+/).filter(e=>e.length>2),c=o.split(/\s+/),d=[...l,...i],u=d.filter(e=>c.some(t=>t===e));return u.length>0?{valid:!1,reason:"Answer contains words from the clue or category: ".concat(u.join(", "))}:{valid:!0}},ei=(e,t,s,a)=>{try{let r=JSON.parse(localStorage.getItem("jeopardy_format_issues")||"[]");r.push({category:e,clue:t,answer:s,issue:a,timestamp:new Date().toISOString()}),localStorage.setItem("jeopardy_format_issues",JSON.stringify(r))}catch(e){}},ec=()=>s.categories.every(e=>e.questions.every(e=>e.answered)),ed=async()=>{if(!x){alert("Please enter an API key");return}if(!x.trim()){alert("Please enter a valid API key");return}localStorage.setItem("jeopardy_api_key",x),localStorage.setItem("jeopardy_ai_provider",m),localStorage.setItem("jeopardy_system_message",f),k(!0);try{s.categories.map(e=>e.title);let e=b?"".concat(f,"\n\n").concat(b):f,t="Create a new Jeopardy game board with EXACTLY 6 creative categories.\n        ".concat(e?"Use the following reference content for creating specialized categories and questions: ".concat(e):"",'\n        \n        For each category, create 5 clues with values from $200 to $1000, ensuring they increase in difficulty.\n        \n        Important:\n        - YOU MUST CREATE EXACTLY 6 CATEGORIES, no more and no less\n        - Create entirely new category titles that are clever and engaging\n        - Clues should be statements or facts, NOT questions\n        - Responses should always start with "What is" or "Who is" etc.\n        - Do not include the answer within the clue text\n        - Make sure clues don\'t give away the answer directly\n        - Include a balanced mix of topics and difficulty levels\n        - Mark EXACTLY 2 clues total as "dailyDouble: true" (these are special high-value clues)\n        - Do not add more than 2 Daily Doubles in total across all categories\n        \n        Format your response as JSON with this exact structure:\n        {\n          "categories": [\n            {\n              "title": "Category Name",\n              "questions": [\n                {\n                  "text": "The clue text that would be shown to contestants",\n                  "answer": "What is the correct response?",\n                  "value": 200,\n                  "dailyDouble": false\n                },\n                ... and so on for values 400, 600, 800, 1000\n              ]\n            },\n            ... repeat for exactly 6 categories, numbered from 0 to 5\n          ]\n        }\n        \n        IMPORTANT REQUIREMENTS:\n        1. The response MUST include EXACTLY 6 categories in the "categories" array.\n        2. There MUST be EXACTLY 2 questions total marked as dailyDouble: true across all categories.'),a={openai:"https://api.openai.com/v1/chat/completions",mistral:"https://api.mistral.ai/v1/chat/completions",deepseek:"https://api.deepseek.com/v1/chat/completions",meta:"https://api.together.xyz/v1/chat/completions",gemini:"https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent"},r=0,i=!1,c=null,u={openai:{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(x)},body:JSON.stringify({model:"gpt-4",messages:[{role:"user",content:t}],max_tokens:4e3})},mistral:{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(x)},body:JSON.stringify({model:"mistral-large-latest",messages:[{role:"user",content:t}]})},deepseek:{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(x)},body:JSON.stringify({model:"deepseek-chat",messages:[{role:"user",content:t}]})},meta:{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(x)},body:JSON.stringify({model:"meta-llama-3-70b-instruct",messages:[{role:"user",content:t}]})},gemini:{method:"POST",headers:{"Content-Type":"application/json","x-goog-api-key":x},body:JSON.stringify({contents:[{role:"user",parts:[{text:t}]}],generationConfig:{temperature:.7,maxOutputTokens:4e3}})}};for(;r<=4&&!i;)try{let e,t;r>0&&console.log("Retrying API request (attempt ".concat(r," of ").concat(4,")...")),console.log("Making request to ".concat(m," API").concat(m!=m?" (via CORS proxy)":"",":"),{endpoint:a[m],method:u[m].method,headers:{...u[m].headers,"x-api-key":"***REDACTED***"}});let h={...u[m],mode:"cors",credentials:"omit"};if(m.includes("Proxy")&&"claudeProxy2"===m&&h.headers){let e={...h.headers};e["X-Requested-With"]="XMLHttpRequest",h.headers=e}let g=await fetch(a[m],h);if(!g.ok){let e="";if(429===g.status)e="Rate limit exceeded. Waiting and retrying...",await new Promise(e=>setTimeout(e,2e3*(r+1)));else if(401===g.status||403===g.status){let e=await g.text();throw console.error("Auth error details:",e),Error("Authentication failed: ".concat(g.status," ").concat(g.statusText,". Please check that your API key is valid, has not expired, and has the correct format."))}else if(0===g.status)throw console.error("Likely CORS error - no response from server"),Error("Network error connecting to the API. Please try using a different AI provider.");else if(g.status>=500)e="The AI service is currently experiencing issues. Retrying...",await new Promise(e=>setTimeout(e,1500));else{let e=await g.text();throw console.error("API error details:",e),Error("API request failed: ".concat(g.status," ").concat(g.statusText,". ").concat(e?"Details: ".concat(e):""))}if(c=Error(e),429===g.status||g.status>=500){r++;continue}throw c}i=!0;let p=await g.json(),y="";switch(m){case"openai":case"mistral":case"deepseek":case"meta":y=p.choices[0].message.content;break;case"gemini":y=p.candidates[0].content.parts[0].text}try{let t=y.match(/```(?:json)?\s*(\{[\s\S]*?\})\s*```/);if(t)e=[t[1]],console.log("Found JSON in code block");else{let t=/(\{(?:[^{}]|(?:\{(?:[^{}]|(?:\{(?:[^{}]|(?:\{[^{}]*\}))*\}))*\}))*\})/g,s=y.match(t);if(s&&s.length>0)e=[s.sort((e,t)=>t.length-e.length)[0]],console.log("Found JSON with balanced brace matching");else{let t=y.match(/\{[\s\S]*?\}/g);t?(e=[t.sort((e,t)=>t.length-e.length)[0]],console.log("Found JSON by simple brace matching")):(e=y.match(/\{[\s\S]*\}/),console.log("Using fallback JSON extraction"))}}}catch(t){console.error("Error in JSON extraction:",t),e=y.match(/\{[\s\S]*\}/)}if(!e)throw console.error("Failed to extract JSON from:",y.substring(0,500)+"..."),Error("Could not find valid JSON in the response");let x=e[0];try{x=(x=(x=x.replace(/[\u0000-\u001F\u007F-\u009F]/g," ")).replace(/"(?:[^"\\]|\\.)*"/g,function(e){return e.replace(/\\(?!["\\/bfnrt])/g,"\\\\").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t").replace(/\f/g,"\\f")})).replace(/,\s*}/g,"}").replace(/,\s*\]/g,"]").replace(/"\s+"/g,'" "').replace(/"\{/g,"{").replace(/\}"/g,"}").replace(/"\[/g,"[").replace(/\]"/g,"]");let e=x.split("\n");e.length>=13&&(e[12]=e[12].replace(/(".*?)([\u0000-\u001F])(.+?")/g,"$1\\$2$3"),x=e.join("\n")),x=x.replace(/"(?:[^"\\]|\\["\\bfnrt])*"/g,function(e){return e.replace(/\\([^"\\bfnrt/])/g,"\\\\$1")})}catch(e){console.error("Error during JSON sanitization:",e)}let v=!1;try{t=JSON.parse(x),v=!0,console.log("Successfully parsed JSON on first attempt")}catch(e){console.error("Initial JSON parsing error:",e),console.log("Attempting more aggressive JSON cleaning...");try{let e=x.replace(/\\(?!["\\/bfnrt])/g,"\\\\").replace(/[\n\r\t\f]/g," ").replace(/"\s+"/g,'" "').replace(/([^\\])"/g,'$1\\"').replace(/\\\\"/g,'\\"').replace(/\\"/g,'\\"');t=JSON.parse(e),v=!0,console.log("Successfully parsed JSON on second attempt")}catch(e){console.error("Second parsing attempt failed:",e);try{let e=x.match(/"categories"\s*:\s*(\[[\s\S]*?\])/);if(e){let s='{"categories":'.concat(e[1],"}");t=JSON.parse(s),v=!0,console.log("Successfully parsed partial JSON (categories only)")}else throw Error("Couldn't find categories array")}catch(e){console.error("Third parsing attempt failed:",e);try{let e=x.replace(/("[^"]*)(")([^"]*")/g,'$1\\"$3').replace(/([\[\{,]\s*)([^,\{\[\]\"\d-])/g,'$1"$2').replace(/([^\s\]\}"])(\s*[\]\},])/g,'$1"$2');t=JSON.parse(e),v=!0,console.log("Successfully parsed JSON on fourth attempt")}catch(e){console.error("Final parsing attempt failed:",e)}}}}v||(console.log("Creating mock data as fallback"),t={categories:n.map((e,t)=>({title:"".concat(e," (AI Error)"),questions:o.map((e,t)=>({text:"JSON parse error occurred. This is a fallback question ".concat(t+1," for ").concat(e," points."),answer:"What is a JSON parsing error?",value:e,revealed:!1,answered:!1,dailyDouble:!1}))}))});let f=t.categories.map(e=>{let t=e.questions.map(t=>{let s=el(e.title,t.text,t.answer);return s.valid||(ei(e.title,t.text,t.answer,s.reason||"Unknown rule violation"),console.warn("Rule violation in generated question: ".concat(s.reason))),{text:t.text,answer:t.answer,value:t.value,revealed:!1,answered:!1,dailyDouble:!0===t.dailyDouble,ruleViolation:s.valid?null:s.reason}});return{title:e.title,questions:t}});if(f.length<6){console.log("API returned only ".concat(f.length," categories instead of 6. Adding missing categories."));let e=6-f.length,t=n.slice(0,e).map(e=>({title:"".concat(e," (Generated)"),questions:o.map(l)}));f=[...f,...t]}else f.length>6&&(console.log("API returned ".concat(f.length," categories instead of 6. Trimming to 6 categories.")),f=f.slice(0,6));let j=0,b=[];if(f.forEach((e,t)=>{e.questions.forEach((e,s)=>{e.dailyDouble&&j++,b.push({categoryIndex:t,questionIndex:s})})}),console.log("Board has ".concat(j," Daily Doubles (target: 2)")),j>2){console.log("Removing ".concat(j-2," excess Daily Doubles"));let e=[];f.forEach((t,s)=>{t.questions.forEach((t,a)=>{t.dailyDouble&&e.push({categoryIndex:s,questionIndex:a})})}),e.sort(()=>Math.random()-.5);for(let t=0;t<e.length-2;t++){let{categoryIndex:s,questionIndex:a}=e[t];f[s].questions[a].dailyDouble=!1}}else if(j<2){console.log("Adding ".concat(2-j," missing Daily Doubles")),b.sort(()=>Math.random()-.5);let e=b.filter(e=>{let{categoryIndex:t,questionIndex:s}=e;return!f[t].questions[s].dailyDouble});for(let t=0;t<2-j&&t<e.length;t++){let{categoryIndex:s,questionIndex:a}=e[t];f[s].questions[a].dailyDouble=!0}}d({...s,categories:f}),S(!1);return}catch(e){if(c=e,console.error("API request error:",e),"TypeError"===e.name){console.log("Network error detected - this is often a CORS issue or network connectivity problem");let e=Error("Network error when trying to connect to the API. This might be due to:\n1. CORS restrictions (browser security preventing direct API access)\n2. Network connectivity issues\n3. Ad blockers or privacy extensions blocking the request\n4. VPN or proxy issues\n\n"+"".concat("Consider trying a different API provider or check your network connection.","\n\n")+'Try these solutions:\n- Try using a different AI provider (like OpenAI or Mistral)\n- Check your ad blockers and disable them for this site\n- Make sure your API key format is correct (Claude API keys start with "sk-ant-")\n- Try using a different browser (Chrome tends to work best)\n- Verify your internet connection is stable\n- Try temporarily disabling any VPN services');throw e}if((e instanceof TypeError||"string"==typeof e.message&&(e.message.includes("Rate limit exceeded")||e.message.includes("experiencing issues")))&&++r<=4){console.log("Request failed, retrying (".concat(r,"/").concat(4,"):"),e),await new Promise(e=>setTimeout(e,1e3*Math.pow(2,r)));continue}throw e}if(!i&&c)throw c;S(!1)}catch(a){console.error("Error generating questions:",a);let e=a instanceof Error?a.message:String(a),t=document.createElement("div");t.className="error-notification",t.innerHTML='\n        <div class="error-content">\n          <h3>Question Generation Failed</h3>\n          <p>'.concat(e,"</p>\n          <button>Close</button>\n        </div>\n      ");let s=t.querySelector("button");s&&s.addEventListener("click",()=>{document.body.removeChild(t)}),document.body.appendChild(t)}finally{k(!1)}},eu=e=>{if(e>=0&&e<J.length){let t=J[e];window.confirm('Load "'.concat(t.name,'"? Current game progress will be lost.'))&&(d(t.data),h(null),p(!1),F(!1))}},eh=(e,t)=>{t.stopPropagation(),window.confirm('Delete "'.concat(J[e].name,'"? This cannot be undone.'))&&R(t=>t.filter((t,s)=>s!==e))};return(0,a.jsxs)("div",{className:"jeopardy-game ".concat(P),children:[(0,a.jsxs)("div",{className:"game-board",children:[(0,a.jsx)("h1",{className:"game-title",children:"Jeopardy!"}),(0,a.jsxs)("div",{className:"game-controls",children:[(0,a.jsx)("button",{onClick:()=>S(!N),children:"AI Settings & Generate"}),(0,a.jsx)("button",{onClick:()=>W(!B),children:B?"Close Editor":"Edit Board"}),(0,a.jsxs)("button",{onClick:()=>{K([...s.players]),ee(s.players.length),H(!0)},children:["Players (",s.players.length,")"]}),(0,a.jsx)("button",{onClick:()=>{window.confirm("Are you sure you want to reset the game? All progress will be lost.")&&(d({categories:i(),players:c(e),currentPlayer:0,finalJeopardyActive:!1}),h(null),p(!1))},children:"Reset Game"}),(0,a.jsx)("button",{onClick:()=>{(ec()||window.confirm("Not all questions have been answered. Are you sure you want to proceed to Final Jeopardy?"))&&d({...s,finalJeopardyActive:!0})},disabled:s.finalJeopardyActive,children:"Final Jeopardy"}),(0,a.jsxs)("div",{className:"save-load-controls",children:[(0,a.jsx)("button",{className:"save-button",onClick:()=>$(!0),children:"\uD83D\uDCBE Save Board"}),(0,a.jsxs)("button",{className:"load-button",onClick:()=>F(!0),children:["\uD83D\uDCC2 Load Board (",J.length,")"]})]}),(0,a.jsxs)("select",{value:P,onChange:e=>q(e.target.value),className:"theme-selector",children:[(0,a.jsx)("option",{value:"standard",children:"Standard Theme"}),(0,a.jsx)("option",{value:"dark",children:"Dark Theme"}),(0,a.jsx)("option",{value:"retro",children:"Retro Theme"})]})]}),N&&(0,a.jsx)("div",{className:"settings-modal",children:(0,a.jsxs)("div",{className:"settings-content",children:[(0,a.jsx)("h2",{children:"AI Settings"}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"AI Provider:"}),(0,a.jsxs)("select",{value:m,onChange:e=>y(e.target.value),children:[(0,a.jsx)("option",{value:"openai",children:"GPT-4 (OpenAI)"}),(0,a.jsx)("option",{value:"gemini",children:"Gemini 1.5 Pro (Google)"}),(0,a.jsx)("option",{value:"mistral",children:"Mistral AI"}),(0,a.jsx)("option",{value:"deepseek",children:"DeepSeek"}),(0,a.jsx)("option",{value:"meta",children:"Llama (Meta)"})]})]}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"API Key:"}),(0,a.jsx)("input",{type:"password",value:x,onChange:e=>v(e.target.value),placeholder:"Enter your API key"})]}),(0,a.jsxs)("div",{className:"form-group system-message-group",children:[(0,a.jsxs)("label",{children:[(0,a.jsx)("span",{className:"label-text",children:"System Message:"}),(0,a.jsx)("span",{className:"label-hint",children:"Instructions for how the AI should generate questions"})]}),(0,a.jsx)("textarea",{value:f,onChange:e=>j(e.target.value),placeholder:"Instructions for the AI (e.g., 'Create challenging academic questions suitable for high school students')",rows:3,className:"system-message-input"})]}),(0,a.jsxs)("div",{className:"form-group reference-text-group",children:[(0,a.jsxs)("label",{children:[(0,a.jsx)("span",{className:"label-text",children:"Reference Text (Optional):"}),(0,a.jsx)("span",{className:"label-hint",children:"Add content to generate subject-specific questions. System prompt instructions will be prepended to this text."})]}),(0,a.jsx)("textarea",{value:b,onChange:e=>w(e.target.value),placeholder:"Paste text, articles, or lesson material that should be used as the basis for questions. The system prompt will be automatically included.",rows:5,className:"reference-text-input"})]}),(0,a.jsxs)("div",{className:"button-group",children:[(0,a.jsx)("button",{onClick:ed,disabled:C,children:C?"Generating...":"Save & Generate"}),(0,a.jsx)("button",{onClick:()=>S(!1),children:"Cancel"})]})]})}),s.finalJeopardyActive?(0,a.jsxs)("div",{className:"final-jeopardy",children:[(0,a.jsx)("h2",{children:"Final Jeopardy"}),(0,a.jsx)("p",{children:"Coming soon!"}),(0,a.jsx)("button",{onClick:()=>{alert("Final Jeopardy functionality will be implemented in a future update.")},children:"Continue"})]}):(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"categories-row",children:s.categories.map((e,t)=>(0,a.jsxs)("div",{className:"category-header ".concat(B?"editable":""),onClick:()=>en(t),children:[e.title,B&&(0,a.jsx)("div",{className:"edit-icon",children:"✏️"})]},t))}),[0,1,2,3,4].map(e=>(0,a.jsx)("div",{className:"questions-row",children:s.categories.map((t,s)=>{let r=t.questions[e];return(0,a.jsx)("div",{className:"question-cell ".concat(r.answered?"answered":""," ").concat(B?"editable":""," ").concat(r.dailyDouble&&r.revealed?"daily-double":""),onClick:()=>{B?eo(s,e):et(s,e)},children:(0,a.jsxs)("div",{className:"question-value-container",children:[r.answered&&!B?"":(0,a.jsxs)(a.Fragment,{children:["$".concat(r.value),r.dailyDouble&&!r.answered&&B&&(0,a.jsx)("div",{className:"daily-double-indicator",children:"DD"})]}),B&&(0,a.jsx)("div",{className:"edit-icon",children:"✏️"})]})},"".concat(s,"-").concat(e))})},e))]}),u&&(0,a.jsx)("div",{className:"question-view",children:(0,a.jsx)("div",{className:"question-content",children:s.categories[u.categoryIndex].questions[u.questionIndex].dailyDouble&&O?(0,a.jsxs)("div",{className:"daily-double-reveal",children:[(0,a.jsx)("h2",{children:"Daily Double!"}),(0,a.jsx)("div",{className:"daily-double-animation"}),(0,a.jsxs)("div",{className:"daily-double-wager",children:[(0,a.jsxs)("p",{className:"wager-instructions",children:[s.players[s.currentPlayer].name,", enter your wager:"]}),(0,a.jsxs)("div",{className:"wager-info",children:[(0,a.jsxs)("p",{children:["Current score: $",s.players[s.currentPlayer].score]}),(0,a.jsxs)("p",{children:["Maximum wager: $",Math.max(s.players[s.currentPlayer].score,1e3)]}),(0,a.jsx)("p",{className:"wager-note",children:"Wagers must be in $100 increments"})]}),(0,a.jsxs)("div",{className:"wager-input-container",children:[(0,a.jsx)("input",{type:"number",className:"wager-input",placeholder:"Enter wager",min:100,max:Math.max(s.players[s.currentPlayer].score,1e3),step:100,onChange:e=>{let t=parseInt(e.target.value)||0;A(100*Math.round(t/100))}}),(0,a.jsx)("button",{className:"wager-button",onClick:()=>es(D||s.categories[u.categoryIndex].questions[u.questionIndex].value),children:"Confirm Wager"})]})]})]}):(0,a.jsxs)(a.Fragment,{children:[s.categories[u.categoryIndex].questions[u.questionIndex].dailyDouble&&!O?(0,a.jsxs)("div",{className:"daily-double-question",children:[(0,a.jsxs)("div",{className:"daily-double-header",children:[(0,a.jsx)("h2",{children:"Daily Double"}),(0,a.jsxs)("p",{className:"wager-display",children:["Wager: $",D]})]}),(0,a.jsx)("p",{className:"question-text",children:s.categories[u.categoryIndex].questions[u.questionIndex].text})]}):(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("h2",{children:["$",s.categories[u.categoryIndex].questions[u.questionIndex].value]}),(0,a.jsx)("p",{className:"question-text",children:s.categories[u.categoryIndex].questions[u.questionIndex].text})]}),g&&(0,a.jsxs)("div",{className:"answer",children:[(0,a.jsx)("h3",{children:"Correct Response:"}),(0,a.jsx)("p",{className:"correct-response",children:s.categories[u.categoryIndex].questions[u.questionIndex].answer})]}),(0,a.jsxs)("div",{className:"question-controls",children:[(0,a.jsxs)("div",{className:"button-row",children:[(0,a.jsx)("button",{onClick:()=>{p(!g)},children:g?"Hide Response":"Show Response"}),g&&(0,a.jsx)("button",{className:"back-button",onClick:()=>{if(u){let{categoryIndex:e,questionIndex:t}=u,a=[...s.categories];a[e].questions[t].answered=!0,d({...s,categories:a})}document.body.style.overflow="",h(null),p(!1),A(null),E(!1)},children:"Return to Board (No Points)"})]}),g?(0,a.jsxs)("div",{className:"player-selection",children:[(0,a.jsx)("h4",{children:"Award Points To:"}),(0,a.jsx)("div",{className:"player-answer-buttons",children:s.players.map((e,t)=>(0,a.jsxs)("div",{className:"player-answer-option",children:[(0,a.jsx)("div",{className:"player-name",children:e.name}),(0,a.jsxs)("div",{className:"answer-buttons",children:[(0,a.jsx)("button",{className:"correct-button",onClick:()=>er(!0,t),children:"Correct"}),(0,a.jsx)("button",{className:"incorrect-button",onClick:()=>er(!1,t),children:"Incorrect"})]})]},t))}),(0,a.jsxs)("div",{className:"multi-deduction",children:[(0,a.jsx)("h4",{children:"Deduct From Multiple Players"}),(0,a.jsx)("div",{className:"player-checkboxes",children:s.players.map((e,t)=>(0,a.jsxs)("div",{className:"player-checkbox",onClick:()=>ea(t),children:[(0,a.jsx)("input",{type:"checkbox",id:"incorrect-".concat(t),checked:!!T[t],onChange:()=>{}}),(0,a.jsx)("label",{htmlFor:"incorrect-".concat(t),children:e.name})]},t))}),(0,a.jsx)("button",{className:"deduct-multiple-button",onClick:()=>{if(!u)return;let{categoryIndex:e,questionIndex:t}=u,a=s.categories[e].questions[t].value;s.categories[e].questions[t].dailyDouble&&null!==D&&(a=D);let r=[...s.players];Object.keys(T).forEach(e=>{let t=parseInt(e,10);T[t]&&(r[t].score-=a)});let n=[...s.categories];n[e].questions[t].answered=!0;let o=(s.currentPlayer+1)%s.players.length;d({...s,categories:n,players:r,currentPlayer:o}),I({}),document.body.style.overflow="",h(null),p(!1),A(null),E(!1)},disabled:0===Object.keys(T).length,children:Object.keys(T).length>0?"Deduct Points from ".concat(Object.keys(T).length," Player").concat(Object.keys(T).length>1?"s":""):"Select Players to Deduct Points"})]})]}):null]})]})})})]}),(0,a.jsx)("div",{className:"scoreboard",children:s.players.map((e,t)=>(0,a.jsxs)("div",{className:"player ".concat(t===s.currentPlayer?"active":""),children:[(0,a.jsx)("h3",{children:e.name}),(0,a.jsxs)("p",{className:"score",children:["$",e.score]})]},t))}),_&&(0,a.jsx)("div",{className:"settings-modal",children:(0,a.jsxs)("div",{className:"settings-content",children:[(0,a.jsx)("h2",{children:"Save Game Board"}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Save Name:"}),(0,a.jsx)("input",{type:"text",value:G,onChange:e=>L(e.target.value),placeholder:"My Custom Jeopardy Board",autoFocus:!0})]}),(0,a.jsxs)("div",{className:"button-group",children:[(0,a.jsx)("button",{onClick:()=>{let e=new Date,t=e.toLocaleString();G||L("Jeopardy Board ".concat(t));let a={name:G||"Jeopardy Board ".concat(t),date:t,data:{...s}};R(e=>[...e,a]),$(!1),L(""),alert('Game saved as "'.concat(a.name,'"'))},children:"Save"}),(0,a.jsx)("button",{onClick:()=>$(!1),children:"Cancel"})]})]})}),M&&(0,a.jsx)("div",{className:"settings-modal",children:(0,a.jsxs)("div",{className:"settings-content",children:[(0,a.jsx)("h2",{children:"Load Saved Game"}),J.length>0?(0,a.jsx)("div",{className:"saved-boards-list",children:J.map((e,t)=>(0,a.jsxs)("div",{className:"saved-board-item",onClick:()=>eu(t),children:[(0,a.jsxs)("div",{className:"saved-board-info",children:[(0,a.jsx)("h3",{children:e.name}),(0,a.jsxs)("p",{className:"saved-date",children:["Saved on: ",e.date]})]}),(0,a.jsx)("button",{className:"delete-board-button",onClick:e=>eh(t,e),children:"\uD83D\uDDD1️"})]},t))}):(0,a.jsx)("p",{className:"no-saved-boards",children:"No saved boards found."}),(0,a.jsx)("div",{className:"button-group",children:(0,a.jsx)("button",{onClick:()=>F(!1),children:"Close"})})]})}),V&&(0,a.jsx)("div",{className:"editor-modal",children:(0,a.jsxs)("div",{className:"editor-content",children:[(0,a.jsx)("h2",{children:"Edit Category"}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Category Title:"}),(0,a.jsx)("input",{type:"text",value:V.title,onChange:e=>U({...V,title:e.target.value}),autoFocus:!0})]}),(0,a.jsxs)("div",{className:"button-group",children:[(0,a.jsx)("button",{onClick:()=>{if(!V)return;let e=[...s.categories];e[V.index].title=V.title,d({...s,categories:e}),U(null)},children:"Save"}),(0,a.jsx)("button",{onClick:()=>U(null),children:"Cancel"})]})]})}),X&&(0,a.jsx)("div",{className:"editor-modal",children:(0,a.jsxs)("div",{className:"editor-content",children:[(0,a.jsx)("h2",{children:"Edit Clue"}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Clue Text:"}),(0,a.jsx)("textarea",{value:X.text,onChange:e=>Y({...X,text:e.target.value}),rows:4,autoFocus:!0,placeholder:"Enter the clue text here"})]}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Correct Response:"}),(0,a.jsx)("input",{type:"text",value:X.answer,onChange:e=>Y({...X,answer:e.target.value}),placeholder:"Enter the correct response"})]}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Value:"}),(0,a.jsxs)("select",{value:X.value,onChange:e=>Y({...X,value:parseInt(e.target.value,10)}),children:[(0,a.jsx)("option",{value:"200",children:"$200"}),(0,a.jsx)("option",{value:"400",children:"$400"}),(0,a.jsx)("option",{value:"600",children:"$600"}),(0,a.jsx)("option",{value:"800",children:"$800"}),(0,a.jsx)("option",{value:"1000",children:"$1000"})]})]}),(0,a.jsx)("div",{className:"form-group",children:(0,a.jsxs)("div",{className:"daily-double-toggle",children:[(0,a.jsx)("input",{type:"checkbox",id:"dailyDoubleToggle",checked:!0===X.dailyDouble,onChange:e=>Y({...X,dailyDouble:e.target.checked})}),(0,a.jsx)("label",{htmlFor:"dailyDoubleToggle",children:"Mark as Daily Double"})]})}),(0,a.jsxs)("div",{className:"button-group",children:[(0,a.jsx)("button",{onClick:()=>{if(!X)return;let{categoryIndex:e,questionIndex:t,text:a,answer:r,value:n,dailyDouble:o}=X,l=s.categories[e].title,i=el(l,a,r);i.valid||ei(l,a,r,i.reason||"Format issue");let c=[...s.categories];c[e].questions[t]={...c[e].questions[t],text:a,answer:r,value:n,dailyDouble:o},d({...s,categories:c}),Y(null)},children:"Save"}),(0,a.jsx)("button",{onClick:()=>Y(null),children:"Cancel"})]})]})}),z&&(0,a.jsx)("div",{className:"editor-modal",children:(0,a.jsxs)("div",{className:"editor-content",children:[(0,a.jsx)("h2",{children:"Player Settings"}),(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsx)("label",{children:"Number of Players:"}),(0,a.jsxs)("select",{value:Z,onChange:e=>{let t=parseInt(e.target.value,10);if(ee(t),t>Q.length){let e=[...Q];for(let s=Q.length+1;s<=t;s++)e.push({name:"Player ".concat(s),score:0,active:!1});K(e)}else t<Q.length&&K(Q.slice(0,t))},children:[(0,a.jsx)("option",{value:"2",children:"2 Players"}),(0,a.jsx)("option",{value:"3",children:"3 Players"}),(0,a.jsx)("option",{value:"4",children:"4 Players"})]})]}),Q.map((e,t)=>(0,a.jsxs)("div",{className:"form-group",children:[(0,a.jsxs)("label",{children:["Player ",t+1," Name:"]}),(0,a.jsx)("input",{type:"text",value:e.name,onChange:e=>{let s=[...Q];s[t].name=e.target.value,K(s)}})]},t)),(0,a.jsxs)("div",{className:"button-group",children:[(0,a.jsx)("button",{onClick:()=>{let e;if(Z===Q.length)e=[...Q];else if(Z>Q.length){e=[...Q];for(let t=Q.length+1;t<=Z;t++)e.push({name:"Player ".concat(t),score:0,active:!1})}else e=Q.slice(0,Z);d({...s,players:e,currentPlayer:s.currentPlayer>=Z?0:s.currentPlayer}),t(Z),H(!1)},children:"Save Players"}),(0,a.jsx)("button",{onClick:()=>H(!1),children:"Cancel"})]})]})})]})}var u=s(2179);function h(){let[e,t]=(0,r.useState)(!1);return((0,r.useEffect)(()=>{t(!0)},[]),e)?(0,a.jsx)("main",{className:"flex min-h-screen flex-col items-center justify-between p-4 md:p-8 lg:p-24 bg-black",children:(0,a.jsx)(u.Z,{children:(0,a.jsx)(d,{})})}):(0,a.jsx)("main",{className:"min-h-screen flex flex-col items-center justify-center p-4 bg-black",children:(0,a.jsx)("div",{className:"text-white text-2xl animate-pulse",children:"Loading Jeopardy..."})})}function g(){return(0,a.jsx)(h,{})}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=8312)}),_N_E=e.O()}]);